// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package mage_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 9;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_00_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_01_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_02_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_03_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_10_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_11_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_12_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_13_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_20_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_21_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_22_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_23_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_30_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_31_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_32_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_cfg_pe_33_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_pea_constants_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_pea_rf_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_trans_size_0_reg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_trans_size_1_reg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_trans_size_2_reg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_trans_size_3_reg_t;

  typedef struct packed {logic [3:0] q;} mage_reg2hw_dma_cfg_reg_t;

  typedef struct packed {logic [1:0] q;} mage_reg2hw_separate_cols_reg_t;

  typedef struct packed {logic q;} mage_reg2hw_synch_dma_ch_reg_t;

  typedef struct packed {
    struct packed {logic [1:0] q;} sel_out_xbar_0;
    struct packed {logic [1:0] q;} sel_out_xbar_1;
    struct packed {logic [1:0] q;} sel_out_xbar_2;
    struct packed {logic [1:0] q;} sel_out_xbar_3;
  } mage_reg2hw_stream_out_xbar_sel_reg_t;

  typedef struct packed {
    struct packed {logic [7:0] q;} sel_col_0;
    struct packed {logic [7:0] q;} sel_col_1;
    struct packed {logic [7:0] q;} sel_col_2;
    struct packed {logic [7:0] q;} sel_col_3;
  } mage_reg2hw_sel_out_col_pea_mreg_t;

  typedef struct packed {logic [31:0] q;} mage_reg2hw_acc_value_mreg_t;

  typedef struct packed {
    logic [31:0] d;
    logic        de;
  } mage_hw2reg_pea_rf_mreg_t;

  // Register -> HW type
  typedef struct packed {
    mage_reg2hw_cfg_pe_00_mreg_t [0:0] cfg_pe_00;  // [2222:2191]
    mage_reg2hw_cfg_pe_01_mreg_t [0:0] cfg_pe_01;  // [2190:2159]
    mage_reg2hw_cfg_pe_02_mreg_t [0:0] cfg_pe_02;  // [2158:2127]
    mage_reg2hw_cfg_pe_03_mreg_t [0:0] cfg_pe_03;  // [2126:2095]
    mage_reg2hw_cfg_pe_10_mreg_t [0:0] cfg_pe_10;  // [2094:2063]
    mage_reg2hw_cfg_pe_11_mreg_t [0:0] cfg_pe_11;  // [2062:2031]
    mage_reg2hw_cfg_pe_12_mreg_t [0:0] cfg_pe_12;  // [2030:1999]
    mage_reg2hw_cfg_pe_13_mreg_t [0:0] cfg_pe_13;  // [1998:1967]
    mage_reg2hw_cfg_pe_20_mreg_t [0:0] cfg_pe_20;  // [1966:1935]
    mage_reg2hw_cfg_pe_21_mreg_t [0:0] cfg_pe_21;  // [1934:1903]
    mage_reg2hw_cfg_pe_22_mreg_t [0:0] cfg_pe_22;  // [1902:1871]
    mage_reg2hw_cfg_pe_23_mreg_t [0:0] cfg_pe_23;  // [1870:1839]
    mage_reg2hw_cfg_pe_30_mreg_t [0:0] cfg_pe_30;  // [1838:1807]
    mage_reg2hw_cfg_pe_31_mreg_t [0:0] cfg_pe_31;  // [1806:1775]
    mage_reg2hw_cfg_pe_32_mreg_t [0:0] cfg_pe_32;  // [1774:1743]
    mage_reg2hw_cfg_pe_33_mreg_t [0:0] cfg_pe_33;  // [1742:1711]
    mage_reg2hw_pea_constants_mreg_t [15:0] pea_constants;  // [1710:1199]
    mage_reg2hw_pea_rf_mreg_t [15:0] pea_rf;  // [1198:687]
    mage_reg2hw_trans_size_0_reg_t trans_size_0;  // [686:655]
    mage_reg2hw_trans_size_1_reg_t trans_size_1;  // [654:623]
    mage_reg2hw_trans_size_2_reg_t trans_size_2;  // [622:591]
    mage_reg2hw_trans_size_3_reg_t trans_size_3;  // [590:559]
    mage_reg2hw_dma_cfg_reg_t dma_cfg;  // [558:555]
    mage_reg2hw_separate_cols_reg_t separate_cols;  // [554:553]
    mage_reg2hw_synch_dma_ch_reg_t synch_dma_ch;  // [552:552]
    mage_reg2hw_stream_out_xbar_sel_reg_t stream_out_xbar_sel;  // [551:544]
    mage_reg2hw_sel_out_col_pea_mreg_t [0:0] sel_out_col_pea;  // [543:512]
    mage_reg2hw_acc_value_mreg_t [15:0] acc_value;  // [511:0]
  } mage_reg2hw_t;

  // HW -> register type
  typedef struct packed {
    mage_hw2reg_pea_rf_mreg_t [15:0] pea_rf;  // [527:0]
  } mage_hw2reg_t;

  // Register offsets
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_00_OFFSET = 9'h0;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_01_OFFSET = 9'h4;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_02_OFFSET = 9'h8;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_03_OFFSET = 9'hc;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_10_OFFSET = 9'h10;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_11_OFFSET = 9'h14;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_12_OFFSET = 9'h18;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_13_OFFSET = 9'h1c;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_20_OFFSET = 9'h20;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_21_OFFSET = 9'h24;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_22_OFFSET = 9'h28;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_23_OFFSET = 9'h2c;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_30_OFFSET = 9'h30;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_31_OFFSET = 9'h34;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_32_OFFSET = 9'h38;
  parameter logic [BlockAw-1:0] MAGE_CFG_PE_33_OFFSET = 9'h3c;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_0_OFFSET = 9'h40;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_1_OFFSET = 9'h44;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_2_OFFSET = 9'h48;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_3_OFFSET = 9'h4c;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_4_OFFSET = 9'h50;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_5_OFFSET = 9'h54;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_6_OFFSET = 9'h58;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_7_OFFSET = 9'h5c;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_8_OFFSET = 9'h60;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_9_OFFSET = 9'h64;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_10_OFFSET = 9'h68;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_11_OFFSET = 9'h6c;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_12_OFFSET = 9'h70;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_13_OFFSET = 9'h74;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_14_OFFSET = 9'h78;
  parameter logic [BlockAw-1:0] MAGE_PEA_CONSTANTS_15_OFFSET = 9'h7c;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_0_OFFSET = 9'h80;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_1_OFFSET = 9'h84;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_2_OFFSET = 9'h88;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_3_OFFSET = 9'h8c;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_4_OFFSET = 9'h90;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_5_OFFSET = 9'h94;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_6_OFFSET = 9'h98;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_7_OFFSET = 9'h9c;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_8_OFFSET = 9'ha0;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_9_OFFSET = 9'ha4;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_10_OFFSET = 9'ha8;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_11_OFFSET = 9'hac;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_12_OFFSET = 9'hb0;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_13_OFFSET = 9'hb4;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_14_OFFSET = 9'hb8;
  parameter logic [BlockAw-1:0] MAGE_PEA_RF_15_OFFSET = 9'hbc;
  parameter logic [BlockAw-1:0] MAGE_TRANS_SIZE_0_OFFSET = 9'hc0;
  parameter logic [BlockAw-1:0] MAGE_TRANS_SIZE_1_OFFSET = 9'hc4;
  parameter logic [BlockAw-1:0] MAGE_TRANS_SIZE_2_OFFSET = 9'hc8;
  parameter logic [BlockAw-1:0] MAGE_TRANS_SIZE_3_OFFSET = 9'hcc;
  parameter logic [BlockAw-1:0] MAGE_DMA_CFG_OFFSET = 9'hd0;
  parameter logic [BlockAw-1:0] MAGE_SEPARATE_COLS_OFFSET = 9'hd4;
  parameter logic [BlockAw-1:0] MAGE_SYNCH_DMA_CH_OFFSET = 9'hd8;
  parameter logic [BlockAw-1:0] MAGE_STREAM_OUT_XBAR_SEL_OFFSET = 9'hdc;
  parameter logic [BlockAw-1:0] MAGE_SEL_OUT_COL_PEA_OFFSET = 9'he0;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_0_OFFSET = 9'he4;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_1_OFFSET = 9'he8;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_2_OFFSET = 9'hec;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_3_OFFSET = 9'hf0;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_4_OFFSET = 9'hf4;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_5_OFFSET = 9'hf8;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_6_OFFSET = 9'hfc;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_7_OFFSET = 9'h100;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_8_OFFSET = 9'h104;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_9_OFFSET = 9'h108;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_10_OFFSET = 9'h10c;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_11_OFFSET = 9'h110;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_12_OFFSET = 9'h114;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_13_OFFSET = 9'h118;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_14_OFFSET = 9'h11c;
  parameter logic [BlockAw-1:0] MAGE_ACC_VALUE_15_OFFSET = 9'h120;

  // Register index
  typedef enum int {
    MAGE_CFG_PE_00,
    MAGE_CFG_PE_01,
    MAGE_CFG_PE_02,
    MAGE_CFG_PE_03,
    MAGE_CFG_PE_10,
    MAGE_CFG_PE_11,
    MAGE_CFG_PE_12,
    MAGE_CFG_PE_13,
    MAGE_CFG_PE_20,
    MAGE_CFG_PE_21,
    MAGE_CFG_PE_22,
    MAGE_CFG_PE_23,
    MAGE_CFG_PE_30,
    MAGE_CFG_PE_31,
    MAGE_CFG_PE_32,
    MAGE_CFG_PE_33,
    MAGE_PEA_CONSTANTS_0,
    MAGE_PEA_CONSTANTS_1,
    MAGE_PEA_CONSTANTS_2,
    MAGE_PEA_CONSTANTS_3,
    MAGE_PEA_CONSTANTS_4,
    MAGE_PEA_CONSTANTS_5,
    MAGE_PEA_CONSTANTS_6,
    MAGE_PEA_CONSTANTS_7,
    MAGE_PEA_CONSTANTS_8,
    MAGE_PEA_CONSTANTS_9,
    MAGE_PEA_CONSTANTS_10,
    MAGE_PEA_CONSTANTS_11,
    MAGE_PEA_CONSTANTS_12,
    MAGE_PEA_CONSTANTS_13,
    MAGE_PEA_CONSTANTS_14,
    MAGE_PEA_CONSTANTS_15,
    MAGE_PEA_RF_0,
    MAGE_PEA_RF_1,
    MAGE_PEA_RF_2,
    MAGE_PEA_RF_3,
    MAGE_PEA_RF_4,
    MAGE_PEA_RF_5,
    MAGE_PEA_RF_6,
    MAGE_PEA_RF_7,
    MAGE_PEA_RF_8,
    MAGE_PEA_RF_9,
    MAGE_PEA_RF_10,
    MAGE_PEA_RF_11,
    MAGE_PEA_RF_12,
    MAGE_PEA_RF_13,
    MAGE_PEA_RF_14,
    MAGE_PEA_RF_15,
    MAGE_TRANS_SIZE_0,
    MAGE_TRANS_SIZE_1,
    MAGE_TRANS_SIZE_2,
    MAGE_TRANS_SIZE_3,
    MAGE_DMA_CFG,
    MAGE_SEPARATE_COLS,
    MAGE_SYNCH_DMA_CH,
    MAGE_STREAM_OUT_XBAR_SEL,
    MAGE_SEL_OUT_COL_PEA,
    MAGE_ACC_VALUE_0,
    MAGE_ACC_VALUE_1,
    MAGE_ACC_VALUE_2,
    MAGE_ACC_VALUE_3,
    MAGE_ACC_VALUE_4,
    MAGE_ACC_VALUE_5,
    MAGE_ACC_VALUE_6,
    MAGE_ACC_VALUE_7,
    MAGE_ACC_VALUE_8,
    MAGE_ACC_VALUE_9,
    MAGE_ACC_VALUE_10,
    MAGE_ACC_VALUE_11,
    MAGE_ACC_VALUE_12,
    MAGE_ACC_VALUE_13,
    MAGE_ACC_VALUE_14,
    MAGE_ACC_VALUE_15
  } mage_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] MAGE_PERMIT[73] = '{
      4'b1111,  // index[ 0] MAGE_CFG_PE_00
      4'b1111,  // index[ 1] MAGE_CFG_PE_01
      4'b1111,  // index[ 2] MAGE_CFG_PE_02
      4'b1111,  // index[ 3] MAGE_CFG_PE_03
      4'b1111,  // index[ 4] MAGE_CFG_PE_10
      4'b1111,  // index[ 5] MAGE_CFG_PE_11
      4'b1111,  // index[ 6] MAGE_CFG_PE_12
      4'b1111,  // index[ 7] MAGE_CFG_PE_13
      4'b1111,  // index[ 8] MAGE_CFG_PE_20
      4'b1111,  // index[ 9] MAGE_CFG_PE_21
      4'b1111,  // index[10] MAGE_CFG_PE_22
      4'b1111,  // index[11] MAGE_CFG_PE_23
      4'b1111,  // index[12] MAGE_CFG_PE_30
      4'b1111,  // index[13] MAGE_CFG_PE_31
      4'b1111,  // index[14] MAGE_CFG_PE_32
      4'b1111,  // index[15] MAGE_CFG_PE_33
      4'b1111,  // index[16] MAGE_PEA_CONSTANTS_0
      4'b1111,  // index[17] MAGE_PEA_CONSTANTS_1
      4'b1111,  // index[18] MAGE_PEA_CONSTANTS_2
      4'b1111,  // index[19] MAGE_PEA_CONSTANTS_3
      4'b1111,  // index[20] MAGE_PEA_CONSTANTS_4
      4'b1111,  // index[21] MAGE_PEA_CONSTANTS_5
      4'b1111,  // index[22] MAGE_PEA_CONSTANTS_6
      4'b1111,  // index[23] MAGE_PEA_CONSTANTS_7
      4'b1111,  // index[24] MAGE_PEA_CONSTANTS_8
      4'b1111,  // index[25] MAGE_PEA_CONSTANTS_9
      4'b1111,  // index[26] MAGE_PEA_CONSTANTS_10
      4'b1111,  // index[27] MAGE_PEA_CONSTANTS_11
      4'b1111,  // index[28] MAGE_PEA_CONSTANTS_12
      4'b1111,  // index[29] MAGE_PEA_CONSTANTS_13
      4'b1111,  // index[30] MAGE_PEA_CONSTANTS_14
      4'b1111,  // index[31] MAGE_PEA_CONSTANTS_15
      4'b1111,  // index[32] MAGE_PEA_RF_0
      4'b1111,  // index[33] MAGE_PEA_RF_1
      4'b1111,  // index[34] MAGE_PEA_RF_2
      4'b1111,  // index[35] MAGE_PEA_RF_3
      4'b1111,  // index[36] MAGE_PEA_RF_4
      4'b1111,  // index[37] MAGE_PEA_RF_5
      4'b1111,  // index[38] MAGE_PEA_RF_6
      4'b1111,  // index[39] MAGE_PEA_RF_7
      4'b1111,  // index[40] MAGE_PEA_RF_8
      4'b1111,  // index[41] MAGE_PEA_RF_9
      4'b1111,  // index[42] MAGE_PEA_RF_10
      4'b1111,  // index[43] MAGE_PEA_RF_11
      4'b1111,  // index[44] MAGE_PEA_RF_12
      4'b1111,  // index[45] MAGE_PEA_RF_13
      4'b1111,  // index[46] MAGE_PEA_RF_14
      4'b1111,  // index[47] MAGE_PEA_RF_15
      4'b1111,  // index[48] MAGE_TRANS_SIZE_0
      4'b1111,  // index[49] MAGE_TRANS_SIZE_1
      4'b1111,  // index[50] MAGE_TRANS_SIZE_2
      4'b1111,  // index[51] MAGE_TRANS_SIZE_3
      4'b0001,  // index[52] MAGE_DMA_CFG
      4'b0001,  // index[53] MAGE_SEPARATE_COLS
      4'b0001,  // index[54] MAGE_SYNCH_DMA_CH
      4'b0001,  // index[55] MAGE_STREAM_OUT_XBAR_SEL
      4'b1111,  // index[56] MAGE_SEL_OUT_COL_PEA
      4'b1111,  // index[57] MAGE_ACC_VALUE_0
      4'b1111,  // index[58] MAGE_ACC_VALUE_1
      4'b1111,  // index[59] MAGE_ACC_VALUE_2
      4'b1111,  // index[60] MAGE_ACC_VALUE_3
      4'b1111,  // index[61] MAGE_ACC_VALUE_4
      4'b1111,  // index[62] MAGE_ACC_VALUE_5
      4'b1111,  // index[63] MAGE_ACC_VALUE_6
      4'b1111,  // index[64] MAGE_ACC_VALUE_7
      4'b1111,  // index[65] MAGE_ACC_VALUE_8
      4'b1111,  // index[66] MAGE_ACC_VALUE_9
      4'b1111,  // index[67] MAGE_ACC_VALUE_10
      4'b1111,  // index[68] MAGE_ACC_VALUE_11
      4'b1111,  // index[69] MAGE_ACC_VALUE_12
      4'b1111,  // index[70] MAGE_ACC_VALUE_13
      4'b1111,  // index[71] MAGE_ACC_VALUE_14
      4'b1111  // index[72] MAGE_ACC_VALUE_15
  };

endpackage

